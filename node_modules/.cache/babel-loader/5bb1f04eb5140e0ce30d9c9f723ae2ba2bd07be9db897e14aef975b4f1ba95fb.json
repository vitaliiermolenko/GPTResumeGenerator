{"ast":null,"code":"var _jsxFileName = \"E:\\\\family\\\\my\\\\worke\\\\petprj\\\\my-gpt-app\\\\src\\\\ResumeForm.jsx\",\n  _s = $RefreshSig$();\n// // ResumeForm.jsx\n// import { useState, useEffect } from 'react';\n// import { useNavigate, Link } from 'react-router-dom';\n\n// const API_KEY = \"sk-proj-X3iYsXxKA8x5RRAk9tnkT3BlbkFJ6pMn5eFKnfeaDs7BNfvn\";\n\n// function ResumeForm() {\n//   const [formData, setFormData] = useState({\n//     firstName: '',\n//     lastName: '',\n//     email: '',\n//     phone: '',\n//     experience: '',\n//     education: '',\n//     skills: ''\n//   });\n\n//   const [resume, setResume] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [showCancelEditing, setShowCancelEditing] = useState(false);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (resume && isEditing) {\n//       document.getElementById(\"editable-resume\").focus();\n//     }\n//   }, [resume, isEditing]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleResumeChange = (e) => {\n//     setResume(e.target.value);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n\n//     const apiRequestBody = {\n//       \"model\": \"gpt-3.5-turbo\",\n//       \"messages\": [\n//         { \"role\": \"system\", \"content\": \"Generate a professional resume based on the following information.\" },\n//         { \"role\": \"user\", \"content\": JSON.stringify(formData) }\n//       ]\n//     };\n\n//     await fetch(\"https://api.openai.com/v1/chat/completions\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Authorization\": \"Bearer \" + API_KEY,\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify(apiRequestBody)\n//     })\n//     .then((response) => response.json())\n//     .then((data) => {\n//       const generatedResume = data.choices[0].message.content;\n//       setResume(generatedResume);\n//       setIsLoading(false);\n//       setIsEditing(true); // Allow editing after resume is generated\n//       setShowCancelEditing(false);\n//     });\n//   };\n\n//   const handleSave = () => {\n//     const savedResumes = JSON.parse(localStorage.getItem('resumes')) || [];\n//     const newResume = { id: Date.now(), resume }; // Only save the generated resume\n//     savedResumes.push(newResume);\n//     localStorage.setItem('resumes', JSON.stringify(savedResumes));\n//     navigate(`/resumes#resume-${newResume.id}`);\n//   };\n\n//   const handleRegenerate = async () => {\n//     setIsLoading(true);\n//     setResume('');\n\n//     const apiRequestBody = {\n//       \"model\": \"gpt-3.5-turbo\",\n//       \"messages\": [\n//         { \"role\": \"system\", \"content\": \"Generate a professional resume based on the following information.\" },\n//         { \"role\": \"user\", \"content\": JSON.stringify(formData) }\n//       ]\n//     };\n\n//     await fetch(\"https://api.openai.com/v1/chat/completions\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Authorization\": \"Bearer \" + API_KEY,\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify(apiRequestBody)\n//     })\n//     .then((response) => response.json())\n//     .then((data) => {\n//       const generatedResume = data.choices[0].message.content;\n//       setResume(generatedResume);\n//       setIsLoading(false);\n//       setIsEditing(true);\n//       setShowCancelEditing(false);\n//     });\n//   };\n\n//   const handleDelete = () => {\n//     setResume('');\n//     setIsLoading(false);\n//     setIsEditing(false);\n//     setShowCancelEditing(false);\n//   };\n\n//   const handleEdit = () => {\n//     setIsEditing(true);\n//     setShowCancelEditing(true);\n//   };\n\n//   const handleCancel = () => {\n//     setIsEditing(false);\n//     setShowCancelEditing(false);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!resume || !isEditing ? (\n//         <form className=\"resume-form\" onSubmit={handleSubmit}>\n//           <h1>Resume Generator</h1>\n//           <label>\n//             First Name:\n//             <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} required />\n//           </label>\n//           <label>\n//             Last Name:\n//             <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} required />\n//           </label>\n//           <label>\n//             Email:\n//             <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n//           </label>\n//           <label>\n//             Phone:\n//             <input type=\"tel\" name=\"phone\" value={formData.phone} onChange={handleChange} required />\n//           </label>\n//           <label>\n//             Experience:\n//             <textarea name=\"experience\" value={formData.experience} onChange={handleChange} required></textarea>\n//           </label>\n//           <label>\n//             Education:\n//             <textarea name=\"education\" value={formData.education} onChange={handleChange} required></textarea>\n//           </label>\n//           <label>\n//             Skills:\n//             <textarea name=\"skills\" value={formData.skills} onChange={handleChange} required></textarea>\n//           </label>\n//           <button type=\"submit\">Generate Resume</button>\n//         </form>\n//       ) : (\n//         <div className=\"resume-output\">\n//           <h2>Generated Resume:</h2>\n//           <textarea\n//             id=\"editable-resume\"\n//             name=\"resume\"\n//             value={resume}\n//             onChange={handleResumeChange}\n//             required\n//             autoFocus\n//           ></textarea>\n//           <div className=\"resume-actions\">\n//             <button onClick={handleSave}>Save</button>\n//             <button onClick={handleRegenerate}>Regenerate</button>\n//             <button onClick={handleDelete}>Delete</button>\n//           </div>\n//         </div>\n//       )}\n//       <Link to=\"/resumes\">View Saved Resumes</Link>\n//     </div>\n//   );\n// }\n\n// export default ResumeForm;\n\n// ResumeForm.jsx\nimport { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"sk-proj-X3iYsXxKA8x5RRAk9tnkT3BlbkFJ6pMn5eFKnfeaDs7BNfvn\";\nfunction ResumeForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    experience: '',\n    education: '',\n    skills: ''\n  });\n  const [resume, setResume] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (resume && isEditing) {\n      document.getElementById(\"editable-resume\").focus();\n    }\n  }, [resume, isEditing]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleResumeChange = e => {\n    setResume(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const apiRequestBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [{\n        \"role\": \"system\",\n        \"content\": \"Generate a professional resume based on the following information.\"\n      }, {\n        \"role\": \"user\",\n        \"content\": JSON.stringify(formData)\n      }]\n    };\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer \" + API_KEY,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then(response => response.json()).then(data => {\n      const generatedResume = data.choices[0].message.content;\n      setResume(generatedResume);\n      setIsLoading(false);\n      setIsEditing(true); // Allow editing after resume is generated\n    });\n  };\n  const handleSave = () => {\n    const savedResumes = JSON.parse(localStorage.getItem('resumes')) || [];\n    const newResume = {\n      id: Date.now(),\n      resume\n    }; // Only save the generated resume\n    savedResumes.push(newResume);\n    localStorage.setItem('resumes', JSON.stringify(savedResumes));\n    navigate(`/resumes#resume-${newResume.id}`);\n  };\n  const handleRegenerate = async () => {\n    setIsLoading(true);\n    setResume('');\n    setIsEditing(false); // Switch to non-editable mode\n\n    const apiRequestBody = {\n      \"model\": \"gpt-3.5-turbo\",\n      \"messages\": [{\n        \"role\": \"system\",\n        \"content\": \"Generate a professional resume based on the following information.\"\n      }, {\n        \"role\": \"user\",\n        \"content\": JSON.stringify(formData)\n      }]\n    };\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": \"Bearer \" + API_KEY,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then(response => response.json()).then(data => {\n      const generatedResume = data.choices[0].message.content;\n      setResume(generatedResume);\n      setIsLoading(false);\n    });\n  };\n  const handleDelete = () => {\n    setResume('');\n    setIsLoading(false);\n    setIsEditing(true); // Switch back to editable mode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!resume || !isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"resume-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Resume Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: formData.firstName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: formData.lastName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"phone\",\n          value: formData.phone,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Experience:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"experience\",\n          value: formData.experience,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Education:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"education\",\n          value: formData.education,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Skills:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"skills\",\n          value: formData.skills,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resume-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Resume:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"editable-resume\",\n        name: \"resume\",\n        value: resume,\n        onChange: handleResumeChange,\n        readOnly: !isEditing,\n        required: true,\n        autoFocus: isEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resume-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRegenerate,\n          children: \"Regenerate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/resumes\",\n      children: \"View Saved Resumes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeForm, \"y1oiMwhIabYgLMDywahSbozMUXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ResumeForm;\nexport default ResumeForm;\nvar _c;\n$RefreshReg$(_c, \"ResumeForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Link","jsxDEV","_jsxDEV","API_KEY","ResumeForm","_s","formData","setFormData","firstName","lastName","email","phone","experience","education","skills","resume","setResume","isLoading","setIsLoading","isEditing","setIsEditing","navigate","document","getElementById","focus","handleChange","e","name","value","target","handleResumeChange","handleSubmit","preventDefault","apiRequestBody","JSON","stringify","fetch","method","headers","body","then","response","json","data","generatedResume","choices","message","content","handleSave","savedResumes","parse","localStorage","getItem","newResume","id","Date","now","push","setItem","handleRegenerate","handleDelete","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","readOnly","autoFocus","onClick","to","_c","$RefreshReg$"],"sources":["E:/family/my/worke/petprj/my-gpt-app/src/ResumeForm.jsx"],"sourcesContent":["// // ResumeForm.jsx\r\n// import { useState, useEffect } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\n\r\n// const API_KEY = \"sk-proj-X3iYsXxKA8x5RRAk9tnkT3BlbkFJ6pMn5eFKnfeaDs7BNfvn\";\r\n\r\n// function ResumeForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: '',\r\n//     lastName: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     experience: '',\r\n//     education: '',\r\n//     skills: ''\r\n//   });\r\n\r\n//   const [resume, setResume] = useState('');\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [showCancelEditing, setShowCancelEditing] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (resume && isEditing) {\r\n//       document.getElementById(\"editable-resume\").focus();\r\n//     }\r\n//   }, [resume, isEditing]);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleResumeChange = (e) => {\r\n//     setResume(e.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setIsLoading(true);\r\n\r\n//     const apiRequestBody = {\r\n//       \"model\": \"gpt-3.5-turbo\",\r\n//       \"messages\": [\r\n//         { \"role\": \"system\", \"content\": \"Generate a professional resume based on the following information.\" },\r\n//         { \"role\": \"user\", \"content\": JSON.stringify(formData) }\r\n//       ]\r\n//     };\r\n\r\n//     await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Authorization\": \"Bearer \" + API_KEY,\r\n//         \"Content-Type\": \"application/json\"\r\n//       },\r\n//       body: JSON.stringify(apiRequestBody)\r\n//     })\r\n//     .then((response) => response.json())\r\n//     .then((data) => {\r\n//       const generatedResume = data.choices[0].message.content;\r\n//       setResume(generatedResume);\r\n//       setIsLoading(false);\r\n//       setIsEditing(true); // Allow editing after resume is generated\r\n//       setShowCancelEditing(false);\r\n//     });\r\n//   };\r\n\r\n//   const handleSave = () => {\r\n//     const savedResumes = JSON.parse(localStorage.getItem('resumes')) || [];\r\n//     const newResume = { id: Date.now(), resume }; // Only save the generated resume\r\n//     savedResumes.push(newResume);\r\n//     localStorage.setItem('resumes', JSON.stringify(savedResumes));\r\n//     navigate(`/resumes#resume-${newResume.id}`);\r\n//   };\r\n\r\n//   const handleRegenerate = async () => {\r\n//     setIsLoading(true);\r\n//     setResume('');\r\n\r\n//     const apiRequestBody = {\r\n//       \"model\": \"gpt-3.5-turbo\",\r\n//       \"messages\": [\r\n//         { \"role\": \"system\", \"content\": \"Generate a professional resume based on the following information.\" },\r\n//         { \"role\": \"user\", \"content\": JSON.stringify(formData) }\r\n//       ]\r\n//     };\r\n\r\n//     await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Authorization\": \"Bearer \" + API_KEY,\r\n//         \"Content-Type\": \"application/json\"\r\n//       },\r\n//       body: JSON.stringify(apiRequestBody)\r\n//     })\r\n//     .then((response) => response.json())\r\n//     .then((data) => {\r\n//       const generatedResume = data.choices[0].message.content;\r\n//       setResume(generatedResume);\r\n//       setIsLoading(false);\r\n//       setIsEditing(true);\r\n//       setShowCancelEditing(false);\r\n//     });\r\n//   };\r\n\r\n//   const handleDelete = () => {\r\n//     setResume('');\r\n//     setIsLoading(false);\r\n//     setIsEditing(false);\r\n//     setShowCancelEditing(false);\r\n//   };\r\n\r\n//   const handleEdit = () => {\r\n//     setIsEditing(true);\r\n//     setShowCancelEditing(true);\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     setIsEditing(false);\r\n//     setShowCancelEditing(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       {!resume || !isEditing ? (\r\n//         <form className=\"resume-form\" onSubmit={handleSubmit}>\r\n//           <h1>Resume Generator</h1>\r\n//           <label>\r\n//             First Name:\r\n//             <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} required />\r\n//           </label>\r\n//           <label>\r\n//             Last Name:\r\n//             <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} required />\r\n//           </label>\r\n//           <label>\r\n//             Email:\r\n//             <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n//           </label>\r\n//           <label>\r\n//             Phone:\r\n//             <input type=\"tel\" name=\"phone\" value={formData.phone} onChange={handleChange} required />\r\n//           </label>\r\n//           <label>\r\n//             Experience:\r\n//             <textarea name=\"experience\" value={formData.experience} onChange={handleChange} required></textarea>\r\n//           </label>\r\n//           <label>\r\n//             Education:\r\n//             <textarea name=\"education\" value={formData.education} onChange={handleChange} required></textarea>\r\n//           </label>\r\n//           <label>\r\n//             Skills:\r\n//             <textarea name=\"skills\" value={formData.skills} onChange={handleChange} required></textarea>\r\n//           </label>\r\n//           <button type=\"submit\">Generate Resume</button>\r\n//         </form>\r\n//       ) : (\r\n//         <div className=\"resume-output\">\r\n//           <h2>Generated Resume:</h2>\r\n//           <textarea\r\n//             id=\"editable-resume\"\r\n//             name=\"resume\"\r\n//             value={resume}\r\n//             onChange={handleResumeChange}\r\n//             required\r\n//             autoFocus\r\n//           ></textarea>\r\n//           <div className=\"resume-actions\">\r\n//             <button onClick={handleSave}>Save</button>\r\n//             <button onClick={handleRegenerate}>Regenerate</button>\r\n//             <button onClick={handleDelete}>Delete</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <Link to=\"/resumes\">View Saved Resumes</Link>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ResumeForm;\r\n\r\n\r\n// ResumeForm.jsx\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nconst API_KEY = \"sk-proj-X3iYsXxKA8x5RRAk9tnkT3BlbkFJ6pMn5eFKnfeaDs7BNfvn\";\r\n\r\nfunction ResumeForm() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    experience: '',\r\n    education: '',\r\n    skills: ''\r\n  });\r\n\r\n  const [resume, setResume] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (resume && isEditing) {\r\n      document.getElementById(\"editable-resume\").focus();\r\n    }\r\n  }, [resume, isEditing]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleResumeChange = (e) => {\r\n    setResume(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    const apiRequestBody = {\r\n      \"model\": \"gpt-3.5-turbo\",\r\n      \"messages\": [\r\n        { \"role\": \"system\", \"content\": \"Generate a professional resume based on the following information.\" },\r\n        { \"role\": \"user\", \"content\": JSON.stringify(formData) }\r\n      ]\r\n    };\r\n\r\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + API_KEY,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(apiRequestBody)\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const generatedResume = data.choices[0].message.content;\r\n      setResume(generatedResume);\r\n      setIsLoading(false);\r\n      setIsEditing(true); // Allow editing after resume is generated\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const savedResumes = JSON.parse(localStorage.getItem('resumes')) || [];\r\n    const newResume = { id: Date.now(), resume }; // Only save the generated resume\r\n    savedResumes.push(newResume);\r\n    localStorage.setItem('resumes', JSON.stringify(savedResumes));\r\n    navigate(`/resumes#resume-${newResume.id}`);\r\n  };\r\n\r\n  const handleRegenerate = async () => {\r\n    setIsLoading(true);\r\n    setResume('');\r\n    setIsEditing(false); // Switch to non-editable mode\r\n\r\n    const apiRequestBody = {\r\n      \"model\": \"gpt-3.5-turbo\",\r\n      \"messages\": [\r\n        { \"role\": \"system\", \"content\": \"Generate a professional resume based on the following information.\" },\r\n        { \"role\": \"user\", \"content\": JSON.stringify(formData) }\r\n      ]\r\n    };\r\n\r\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + API_KEY,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(apiRequestBody)\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const generatedResume = data.choices[0].message.content;\r\n      setResume(generatedResume);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setResume('');\r\n    setIsLoading(false);\r\n    setIsEditing(true); // Switch back to editable mode\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!resume || !isEditing ? (\r\n        <form className=\"resume-form\" onSubmit={handleSubmit}>\r\n          <h1>Resume Generator</h1>\r\n          <label>\r\n            First Name:\r\n            <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleChange} required />\r\n          </label>\r\n          <label>\r\n            Last Name:\r\n            <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleChange} required />\r\n          </label>\r\n          <label>\r\n            Email:\r\n            <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n          </label>\r\n          <label>\r\n            Phone:\r\n            <input type=\"tel\" name=\"phone\" value={formData.phone} onChange={handleChange} required />\r\n          </label>\r\n          <label>\r\n            Experience:\r\n            <textarea name=\"experience\" value={formData.experience} onChange={handleChange} required></textarea>\r\n          </label>\r\n          <label>\r\n            Education:\r\n            <textarea name=\"education\" value={formData.education} onChange={handleChange} required></textarea>\r\n          </label>\r\n          <label>\r\n            Skills:\r\n            <textarea name=\"skills\" value={formData.skills} onChange={handleChange} required></textarea>\r\n          </label>\r\n          <button type=\"submit\">Generate Resume</button>\r\n        </form>\r\n      ) : (\r\n        <div className=\"resume-output\">\r\n          <h2>Generated Resume:</h2>\r\n          <textarea\r\n            id=\"editable-resume\"\r\n            name=\"resume\"\r\n            value={resume}\r\n            onChange={handleResumeChange}\r\n            readOnly={!isEditing}\r\n            required\r\n            autoFocus={isEditing}\r\n          ></textarea>\r\n          <div className=\"resume-actions\">\r\n            <button onClick={handleSave}>Save</button>\r\n            <button onClick={handleRegenerate}>Regenerate</button>\r\n            <button onClick={handleDelete}>Delete</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Link to=\"/resumes\">View Saved Resumes</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResumeForm;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAG,0DAA0D;AAE1E,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;I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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}