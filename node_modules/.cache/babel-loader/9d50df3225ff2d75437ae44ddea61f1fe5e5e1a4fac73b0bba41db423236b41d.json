{"ast":null,"code":"// import { useState } from 'react';\n// import './App.css';\n\n// const API_KEY = \"sk-proj-X3iYsXxKA8x5RRAk9tnkT3BlbkFJ6pMn5eFKnfeaDs7BNfvn\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     {\n//       message: \"Hello, I'm ChatGPT! Ask me anything!\",\n//       sentTime: \"just now\",\n//       sender: \"ChatGPT\"\n//     }\n//   ]);\n//   const [isTyping, setIsTyping] = useState(false);\n//   const [inputMessage, setInputMessage] = useState('');\n\n//   const handleSend = async (message) => {\n//     const newMessage = {\n//       message,\n//       direction: 'outgoing',\n//       sender: \"user\"\n//     };\n\n//     const newMessages = [...messages, newMessage];\n\n//     setMessages(newMessages);\n//     setInputMessage('');\n//     setIsTyping(true);\n\n//     await processMessageToChatGPT(newMessages);\n//   };\n\n//   async function processMessageToChatGPT(chatMessages) {\n//     let apiMessages = chatMessages.map((messageObject) => {\n//       let role = messageObject.sender === \"ChatGPT\" ? \"assistant\" : \"user\";\n//       return { role: role, content: messageObject.message };\n//     });\n\n//     const apiRequestBody = {\n//       \"model\": \"gpt-3.5-turbo\",\n//       \"messages\": apiMessages\n//     };\n\n//     await fetch(\"https://api.openai.com/v1/chat/completions\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Authorization\": \"Bearer \" + API_KEY,\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify(apiRequestBody)\n//     })\n//     .then((data) => data.json())\n//     .then((data) => {\n//       setMessages([...chatMessages, {\n//         message: data.choices[0].message.content,\n//         sender: \"ChatGPT\"\n//       }]);\n//       setIsTyping(false);\n//     });\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"chat-container\">\n//         <div className=\"message-list\">\n//           {messages.map((message, i) => (\n//             <div key={i} className={`message ${message.sender}`}>\n//               {message.message}\n//             </div>\n//           ))}\n//           {isTyping && <div className=\"message typing\">ChatGPT is typing...</div>}\n//         </div>\n//         <div className=\"message-input\">\n//           <input \n//             type=\"text\" \n//             value={inputMessage} \n//             onChange={(e) => setInputMessage(e.target.value)} \n//             placeholder=\"Type message here\" \n//           />\n//           <button onClick={() => handleSend(inputMessage)}>Send</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["E:/family/my/worke/petprj/my-gpt-app/src/App.js"],"sourcesContent":["// import { useState } from 'react';\n// import './App.css';\n\n// const API_KEY = \"sk-proj-X3iYsXxKA8x5RRAk9tnkT3BlbkFJ6pMn5eFKnfeaDs7BNfvn\";\n\n// function App() {\n//   const [messages, setMessages] = useState([\n//     {\n//       message: \"Hello, I'm ChatGPT! Ask me anything!\",\n//       sentTime: \"just now\",\n//       sender: \"ChatGPT\"\n//     }\n//   ]);\n//   const [isTyping, setIsTyping] = useState(false);\n//   const [inputMessage, setInputMessage] = useState('');\n\n//   const handleSend = async (message) => {\n//     const newMessage = {\n//       message,\n//       direction: 'outgoing',\n//       sender: \"user\"\n//     };\n\n//     const newMessages = [...messages, newMessage];\n    \n//     setMessages(newMessages);\n//     setInputMessage('');\n//     setIsTyping(true);\n\n//     await processMessageToChatGPT(newMessages);\n//   };\n\n//   async function processMessageToChatGPT(chatMessages) {\n//     let apiMessages = chatMessages.map((messageObject) => {\n//       let role = messageObject.sender === \"ChatGPT\" ? \"assistant\" : \"user\";\n//       return { role: role, content: messageObject.message };\n//     });\n\n//     const apiRequestBody = {\n//       \"model\": \"gpt-3.5-turbo\",\n//       \"messages\": apiMessages\n//     };\n\n//     await fetch(\"https://api.openai.com/v1/chat/completions\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Authorization\": \"Bearer \" + API_KEY,\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify(apiRequestBody)\n//     })\n//     .then((data) => data.json())\n//     .then((data) => {\n//       setMessages([...chatMessages, {\n//         message: data.choices[0].message.content,\n//         sender: \"ChatGPT\"\n//       }]);\n//       setIsTyping(false);\n//     });\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"chat-container\">\n//         <div className=\"message-list\">\n//           {messages.map((message, i) => (\n//             <div key={i} className={`message ${message.sender}`}>\n//               {message.message}\n//             </div>\n//           ))}\n//           {isTyping && <div className=\"message typing\">ChatGPT is typing...</div>}\n//         </div>\n//         <div className=\"message-input\">\n//           <input \n//             type=\"text\" \n//             value={inputMessage} \n//             onChange={(e) => setInputMessage(e.target.value)} \n//             placeholder=\"Type message here\" \n//           />\n//           <button onClick={() => handleSend(inputMessage)}>Send</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}